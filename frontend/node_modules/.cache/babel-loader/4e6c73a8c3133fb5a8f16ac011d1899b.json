{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/82107/Desktop/study/3-2/\\uC6F9\\uC2DC\\uC124/\\uD504\\uB85C\\uC81D\\uD2B8/frontend/src/components/Pagination.js\";\nimport React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n  const {\n    itemsCount,\n    pageSize,\n    currentPage,\n    onPageChange\n  } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\n\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\n\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\n\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\n\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: page === currentPage ? \"page-item active\" : \"page-item\" // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\n        ,\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          onClick: () => onPageChange(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/mnt/c/Users/82107/Desktop/study/3-2/웹시설/프로젝트/frontend/src/components/Pagination.js"],"names":["React","_","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","range","map","page","cursor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,MAAsDJ,KAA5D,CAD4B,CACuC;;AAEnE,QAAMK,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAlB,CAH4B,CAGwB;;AACpD,MAAIG,SAAS,KAAK,CAAlB,EAAqB,OAAO,IAAP,CAJO,CAIM;;AAElC,QAAMG,KAAK,GAAGV,CAAC,CAACW,KAAF,CAAQ,CAAR,EAAWJ,SAAS,GAAG,CAAvB,CAAd,CAN4B,CAMa;;;AAEzC,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGG,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACb;AAEE,QAAA,SAAS,EAAEA,IAAI,KAAKR,WAAT,GAAuB,kBAAvB,GAA4C,WAFzD,CAEsE;AAFtE;AAGE,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAE;AAAV,SAHT;AAAA,+BAII;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,MAAMR,YAAY,CAACO,IAAD,CAAzD;AAAA,oBAAkEA;AAAlE;AAAA;AAAA;AAAA;AAAA;AAJJ,SACOA,IADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtBD;;KAAMZ,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n\r\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li \r\n            key={page} \r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}>\r\n              <button className=\"page-link\" onClick={() => onPageChange(page)}>{page}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}