{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/82107/Desktop/study/3-2/\\uC6F9\\uC2DC\\uC124/\\uD504\\uB85C\\uC81D\\uD2B8/Dream_Search/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/mnt/c/Users/82107/Desktop/study/3-2/\\uC6F9\\uC2DC\\uC124/\\uD504\\uB85C\\uC81D\\uD2B8/Dream_Search/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState}from'react';import{withRouter}from'react-router-dom';import Pagination from'./Pagination';import Article from'./Article';import _ from'lodash';var List=function List(props){var _useState=useState({pageSize:5,currentPage:1}),_useState2=_slicedToArray(_useState,2),articles=_useState2[0],setArticles=_useState2[1];var pageSize=articles.pageSize,currentPage=articles.currentPage;var count=props.list.length;var posting=function posting(){if(window.sessionStorage.getItem('n_name'))props.history.push('/article/post');else{window.alert('로그인이 필요합니다!');props.history.push('/login');}};function paginate(pageSize,pageNumber){var startIndex=(pageNumber-1)*pageSize;// 자를 배열의 시작점\nreturn _(props.list).slice(startIndex)// 시작점부터 배열을 자르되\n.take(pageSize)// pageSize만큼의 배열을 취함\n.value();// lodash wrapper 객체를 regular 배열로 변환\n}var handlePageChange=function handlePageChange(page){setArticles(_objectSpread(_objectSpread({},articles),{},{currentPage:page}));};var pagedArticles=paginate(pageSize,currentPage);return/*#__PURE__*/_jsxs(_Fragment,{children:[pagedArticles.map(function(article){return/*#__PURE__*/_jsx(Article,{article:article});}),/*#__PURE__*/_jsxs(\"div\",{class:\"fit\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-outline-primary float-right\",onClick:function onClick(){return posting();},children:\"Post \\u2192\"}),/*#__PURE__*/_jsx(Pagination,{pageSize:pageSize,itemsCount:count,currentPage:currentPage,onPageChange:handlePageChange})]})]});};export default withRouter(List);","map":{"version":3,"sources":["/mnt/c/Users/82107/Desktop/study/3-2/웹시설/프로젝트/Dream_Search/frontend/src/components/List.js"],"names":["React","useState","withRouter","Pagination","Article","_","List","props","pageSize","currentPage","articles","setArticles","count","list","length","posting","window","sessionStorage","getItem","history","push","alert","paginate","pageNumber","startIndex","slice","take","value","handlePageChange","page","pagedArticles","map","article"],"mappings":"skBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,eACYN,QAAQ,CAAC,CACrCO,QAAQ,CAAE,CAD2B,CAErCC,WAAW,CAAE,CAFwB,CAAD,CADpB,wCACbC,QADa,eACHC,WADG,kBAKZH,CAAAA,QALY,CAKcE,QALd,CAKZF,QALY,CAKFC,WALE,CAKcC,QALd,CAKFD,WALE,CAMpB,GAAMG,CAAAA,KAAK,CAAGL,KAAK,CAACM,IAAN,CAAWC,MAAzB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAIC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAJ,CAA6CX,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,eAAnB,EAA7C,IACK,CACDJ,MAAM,CAACK,KAAP,CAAa,aAAb,EACAd,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACH,CACJ,CAND,CAOA,QAASE,CAAAA,QAAT,CAAkBd,QAAlB,CAA4Be,UAA5B,CAAwC,CACpC,GAAMC,CAAAA,UAAU,CAAG,CAACD,UAAU,CAAG,CAAd,EAAmBf,QAAtC,CAAgD;AAEhD,MAAOH,CAAAA,CAAC,CAACE,KAAK,CAACM,IAAP,CAAD,CACFY,KADE,CACID,UADJ,CACgB;AADhB,CAEFE,IAFE,CAEGlB,QAFH,CAEa;AAFb,CAGFmB,KAHE,EAAP,CAGc;AACjB,CACD,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAU,CAC/BlB,WAAW,gCAAMD,QAAN,MAAgBD,WAAW,CAAEoB,IAA7B,GAAX,CACH,CAFD,CAGA,GAAMC,CAAAA,aAAa,CAAGR,QAAQ,CAACd,QAAD,CAAWC,WAAX,CAA9B,CACA,mBACI,2BACKqB,aAAa,CAACC,GAAd,CAAkB,SAAAC,OAAO,qBACtB,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EADsB,EAAzB,CADL,cAII,aAAK,KAAK,CAAC,KAAX,wBACI,eAAQ,KAAK,CAAC,qCAAd,CAAoD,OAAO,CAAE,yBAAMjB,CAAAA,OAAO,EAAb,EAA7D,yBADJ,cAEI,KAAC,UAAD,EACI,QAAQ,CAAEP,QADd,CAEI,UAAU,CAAEI,KAFhB,CAGI,WAAW,CAAEH,WAHjB,CAII,YAAY,CAAEmB,gBAJlB,EAFJ,GAJJ,GADJ,CAiBH,CA3CD,CA6CA,cAAe1B,CAAAA,UAAU,CAACI,IAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Pagination from './Pagination'\r\nimport Article from './Article'\r\nimport _ from 'lodash'\r\n\r\nconst List = (props) => {\r\n    const [articles, setArticles] = useState({\r\n        pageSize: 5,\r\n        currentPage: 1\r\n    });\r\n    const { pageSize, currentPage } = articles;\r\n    const count = props.list.length;\r\n    const posting = () => {\r\n        if (window.sessionStorage.getItem('n_name')) props.history.push('/article/post');\r\n        else {\r\n            window.alert('로그인이 필요합니다!');\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n    function paginate(pageSize, pageNumber) {\r\n        const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n        return _(props.list)\r\n            .slice(startIndex) // 시작점부터 배열을 자르되\r\n            .take(pageSize) // pageSize만큼의 배열을 취함\r\n            .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n    }\r\n    const handlePageChange = (page) => {\r\n        setArticles({ ...articles, currentPage: page });\r\n    };\r\n    const pagedArticles = paginate(pageSize, currentPage);\r\n    return (\r\n        <>\r\n            {pagedArticles.map(article =>\r\n                <Article article={article} />\r\n            )}\r\n            <div class=\"fit\">\r\n                <button class=\"btn btn-outline-primary float-right\" onClick={() => posting()}>Post &rarr;</button>\r\n                <Pagination\r\n                    pageSize={pageSize}\r\n                    itemsCount={count}\r\n                    currentPage={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(List);"]},"metadata":{},"sourceType":"module"}