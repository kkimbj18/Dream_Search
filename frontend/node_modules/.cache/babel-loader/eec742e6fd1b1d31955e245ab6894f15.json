{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/82107/Desktop/study/3-2/\\uC6F9\\uC2DC\\uC124/\\uD504\\uB85C\\uC81D\\uD2B8/frontend/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Article from './Article';\nimport _ from 'lodash';\n\nconst List = props => {\n  _s();\n\n  const [articles, setArticles] = useState({\n    data: props.list,\n    pageSize: 5,\n    currentPage: 1\n  });\n\n  const posting = () => {\n    if (window.sessionStorage.getItem('n_name')) props.history.push('/article/post');else {\n      window.alert('로그인이 필요합니다!');\n      props.history.push('/login');\n    }\n  };\n\n  function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\n\n    return _(items).slice(startIndex) // 시작점부터 배열을 자르되\n    .take(pageSize) // pageSize만큼의 배열을 취함\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\n  }\n\n  const handlePageChange = page => {\n    setArticles({ ...articles,\n      currentPage: page\n    });\n  };\n\n  const {\n    data,\n    pageSize,\n    currentPage\n  } = articles;\n  const pagedArticles = paginate(data, pageSize, currentPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pagedArticles.map(article => /*#__PURE__*/_jsxDEV(Article, {\n      article: article\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      div: true,\n      class: \"clearfix\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary float-right\",\n        onClick: () => posting(),\n        children: \"Post \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(List, \"r90AabgIlpZTge+rawwe040ktEY=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/mnt/c/Users/82107/Desktop/study/3-2/웹시설/프로젝트/frontend/src/components/List.js"],"names":["React","useState","Article","_","List","props","articles","setArticles","data","list","pageSize","currentPage","posting","window","sessionStorage","getItem","history","push","alert","paginate","items","pageNumber","startIndex","slice","take","value","handlePageChange","page","pagedArticles","map","article"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACrCO,IAAAA,IAAI,EAAEH,KAAK,CAACI,IADyB;AAErCC,IAAAA,QAAQ,EAAE,CAF2B;AAGrCC,IAAAA,WAAW,EAAE;AAHwB,GAAD,CAAxC;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAJ,EAA6CV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,eAAnB,EAA7C,KACK;AACDJ,MAAAA,MAAM,CAACK,KAAP,CAAa,aAAb;AACAb,MAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,GAND;;AAOA,WAASE,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCX,QAArC,EAA+C;AAC3C,UAAMY,UAAU,GAAG,CAACD,UAAU,GAAG,CAAd,IAAmBX,QAAtC,CAD2C,CACK;;AAEhD,WAAOP,CAAC,CAACiB,KAAD,CAAD,CACFG,KADE,CACID,UADJ,EACgB;AADhB,KAEFE,IAFE,CAEGd,QAFH,EAEa;AAFb,KAGFe,KAHE,EAAP,CAH2C,CAM7B;AACjB;;AACD,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC/BpB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,MAAAA,WAAW,EAAEgB;AAA5B,KAAD,CAAX;AACH,GAFD;;AAGA,QAAM;AAAEnB,IAAAA,IAAF;AAAQE,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAAkCL,QAAxC;AACA,QAAMsB,aAAa,GAAGT,QAAQ,CAACX,IAAD,EAAOE,QAAP,EAAiBC,WAAjB,CAA9B;AACA,sBACI;AAAA,eACKiB,aAAa,CAACC,GAAd,CAAkBC,OAAO,iBACtB,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAII;AAAK,MAAA,GAAG,MAAR;AAAS,MAAA,KAAK,EAAC,UAAf;AAAA,6BACI;AAAQ,QAAA,KAAK,EAAC,6BAAd;AAA4C,QAAA,OAAO,EAAE,MAAMlB,OAAO,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAUH,CApCD;;GAAMR,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Article from './Article'\r\nimport _ from 'lodash'\r\n\r\nconst List = (props) => {\r\n    const [articles, setArticles] = useState({\r\n        data: props.list,\r\n        pageSize: 5,\r\n        currentPage: 1\r\n    });\r\n    const posting = () => {\r\n        if (window.sessionStorage.getItem('n_name')) props.history.push('/article/post');\r\n        else {\r\n            window.alert('로그인이 필요합니다!');\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n    function paginate(items, pageNumber, pageSize) {\r\n        const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n        return _(items)\r\n            .slice(startIndex) // 시작점부터 배열을 자르되\r\n            .take(pageSize) // pageSize만큼의 배열을 취함\r\n            .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n    }\r\n    const handlePageChange = (page) => {\r\n        setArticles({ ...articles, currentPage: page });\r\n    };\r\n    const { data, pageSize, currentPage } = articles;\r\n    const pagedArticles = paginate(data, pageSize, currentPage);\r\n    return (\r\n        <>\r\n            {pagedArticles.map(article =>\r\n                <Article article={article} />\r\n            )}\r\n            <div div class=\"clearfix\" >\r\n                <button class=\"btn btn-primary float-right\" onClick={() => posting()}>Post &rarr;</button>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}